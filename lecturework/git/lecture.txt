Виды контроля версий:
    Распределенная и централизованная

Git -- распределенная система контроля версий (линукс Торальд)
    +:
        Независимая работа
        Полная история проекта
        Высокая скорость операций
Состояние файла в рабочем каталоге:
    Не отслеживается (серый)
    Неизменен (зеленый)
    Изменен (желтый)
    В индексе (красный)
    git status просмотр состояния файла(-ов)

git flow -- разделение на ветки разработки и  их назначения:
    main(master) -- продакшн сборка
    hotfix -- исправления в main
    release -- замороженная ветка (готовится в main)
    dev -- основная разработка
    feature_1 -- добавление отдельных фич
    feature_2 -- добавление отдельных фич
    ...

Платформы для хостинга репозиториев:
    GitHub
    Azure DevOps
    GitLab
    BitBucket

Настройка изначальных конфигураций:
    git config --global user.name "NAME"
    git config --global user.email "EMAIL"
Создание нового локального репозиторя:
    git init
Добавление файлов для первого коммита
    git add .
    git commit -m "Название коммита"
    Как ставить название: "feat: удалили, изменили, добавили и тд"
Подключение удаленного репозитория:
    git remote add origin https://github.com/логин/имя_репозитория.git
Проверка удаленного репозитория:
    git remote -v
Оптравка изменений:
    git push -u origin master
Перезаписать коммит:
    git push --force origin main
Получение изменений:
    git pull origin master (совмещает merge и fetch)
    fetch -- для просмотра
    merge -- для изменения
Изменение название коммита
    git commit --amend -m "новое название"
Создание и переход на новую ветку:
    git checkout -b dev
    checkout --переход на ветку
    -b dev -- branch создание веток (branch -- просмотр всех веток)
Слияние веток
    git merge dev
Просмотр коммитов
    git log
Клонирование
    git clone ссылка
Созранение данных во временное хранилище
    git stash
Копирование коммита
    git cherry-pick [hash]
Возващение к предыдущему коммиту
    git reset --soft HEAD~1 -- вернуться к предыдущему, ~1 -- количество коммитов для отмены,
                               HEAD -- голова ветки (самый последний коммит ветки)
    git reset --hard HEAD~1 -- отменить вернуться к предыдущему